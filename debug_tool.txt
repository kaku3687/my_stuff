#Bundle and Transfer log files

#Input -- Profile Name, Time, Date

	- Add parameter to run.py (-l)
	- This will prompt user for information, which get's written to file

#Output -- README header with Profile Name, Command Executed, Time, Date
	-- .ros/log files from both high_brain and low_brain
	-- .zip file containing all output

	 - When run.py completes, pull logs to folder and zip contents

#Transfer of output from robot to (as available, in order):
	1. Network Debug Folder
	2. User Machine
	3. High_Brain Debug Folder

		- See what is connected
		- Attempt to transfer zip folder based on connection priority 

#SSH to Low Brain
	1. SSH to low_brain 
	2. return output from 'ethercat master'
	3. close() ssh session

#SSH to Operator Station
	1. SSH to op station (who <-- IP)
		a. If connected via multiple subnets, prioritize
	2. set ROS_IP
	3. set ROS_MASTER_URI
	4. set ROS_HOSTNAME
	5. source ~/.bashrc
	6. close() ssh session

#Launch on High_Brain
	1. Execute initial Input functions
	2. Configure client (user) machine based on connectivity
		a. ROS_IP <-- Based on connection and priority
		b. ROS_MASTER_URI <-- Check if set to high_brain
	3. Execute run.py based on user parameters
		a. robot config - rm1h only
		b. interface - rosc only
		c. planner
			i.	moveit
			ii.	traclabs
			iii.	both
		d. tools
			i. 	mantis_drive
			ii. 	mantis_cam
			iii.	ximea_cam
	3. Start UI tools
		a. armctl.py
		b. drive.py -- only if mantis_drive is enabled
		c. rviz

#Cleanup
	1. Clear last three lines of operator ~/.bashrc
	2. close() all ssh sessions
